{"version":3,"sources":["components/Item-list.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyle","makeStyles","root","detailButton","columns","field","title","ItemList","classes","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","className","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","useAxios","data","loading","error","icons","editable","options","filtering","detailPanel","rowData","useStyles","nav","height","list","width","fullList","MenuItems1","key","icon","path","main","ListItemLink","primary","to","renderLink","React","useMemo","itemProps","ListItem","button","component","ListItemIcon","ListItemText","App","anchor","Grid","container","item","xs","clsx","role","List","map","index","route","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b0e426d.chunk.js","sourcesContent":["import React, {FC,forwardRef} from 'react';\r\nimport useAxios from 'axios-hooks';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport MaterialTable, { Icons } from 'material-table';\r\n\r\n// import './Item-list.css';\r\n\r\nimport ItemTab from './item-tab';\r\nimport { colors, makeStyles } from '@material-ui/core';\r\n\r\n// interface ColumItems {\r\n//   pcItemCode:string,\r\n//   assetKindCode:string,\r\n//   itemNumber:string,\r\n//   employeeName:string,\r\n//   departmentName:string,\r\n// }\r\n\r\ninterface DetailItems {\r\n  makerName:string,\r\n  pcTypeNumber:string,\r\n  pcServiceTag:string,\r\n  assetKind:string,\r\n  pcMemo:string,\r\n  monitorNumber1:string,\r\n  monitorNumber2:string,\r\n  monitorNumber3:string,\r\n  mouseMemo:string,\r\n  mouseNumber:string,\r\n\r\n}\r\n\r\nconst useStyle = makeStyles({\r\n  root : {\r\n    '& *': {\r\n      \"background\": '#252525',\r\n      \"color\": 'whitesmoke',\r\n      \"font-size\": 'calc(10px + 1vmin)'\r\n    }\r\n  },\r\n  detailButton: {\r\n    '& *:active':{\r\n      'outline': 'none'\r\n    }\r\n  }\r\n});\r\n\r\nconst columns = [\r\n  {field:\"pcItemCode\"     , title:\"No.\"},\r\n  {field:\"assetKindCode\"  , title:\"資産種別\"},\r\n  {field:\"itemNumber\"     , title:\"備品番号\"},\r\n  {field:\"employeeName\"   , title:\"従業員名\"},\r\n  {field:\"departmentName\" , title:\"部署\"}\r\n];\r\n\r\n\r\nconst ItemList: FC = () => {\r\n  const classes = useStyle();\r\n\r\n  const tableIcons:Icons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} className={classes.detailButton}  />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  }; \r\n\r\n  // useEffect(async ()=> {\r\n  //   const result = await axios('http://localhost:5000/api/itmanagement/getpcitems');\r\n\r\n  //   setData(result.data);\r\n  // },[]);\r\n\r\n  const [{data, loading, error}] = useAxios(\r\n      'http://localhost:5000/api/itmanagement/getpcitems'\r\n      // 'http://192.168.1.80:5003/PCItems'\r\n  );\r\n  \r\n  if (loading) return <p>loading...</p>\r\n  if (error) return <p>Error!</p>\r\n\r\n  return(\r\n    <div >\r\n      <MaterialTable \r\n        title=\"\"\r\n        columns={columns}\r\n        data={data}\r\n        icons={tableIcons}\r\n        editable={{\r\n\r\n        }}\r\n        options={{\r\n          filtering:true,\r\n        }}\r\n        \r\n        detailPanel={rowData => {\r\n          return(\r\n            <div>\r\n              <p>AAAA</p>   \r\n            </div>  \r\n            )\r\n          }\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemList;","import React,{FC,forwardRef, useMemo} from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link as RouterLink, LinkProps as RouterLinkProps\r\n} from \"react-router-dom\";\r\nimport MaterialTable, { Icons } from 'material-table';\r\nimport Container from '@material-ui/core/Container';\r\nimport {makeStyles, createStyles, Theme}  from '@material-ui/core/styles';\r\nimport useAxios from 'axios-hooks';\r\n\r\nimport Grid, { GridSpacing } from '@material-ui/core/Grid';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\n// import './App.css';\r\nimport ItemList from './components/Item-list';\r\n\r\nimport SideNav from './components/sidenav';\r\nimport { LinkProps } from '@material-ui/core';\r\nimport { Height } from '@material-ui/icons';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  nav: {\r\n    // backgroundColor:'red',\r\n    height: '100vh'\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\n\r\ninterface Menu {\r\n  key:string;\r\n  title:string;\r\n  icon:any;\r\n  path:string;\r\n  main: ()=> any;\r\n};\r\n\r\ninterface ListItemLinkProps {\r\n  icon?: React.ReactElement;\r\n  primary: string;\r\n  to: string;\r\n}\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\n\r\nconst MenuItems1:Menu[] = [\r\n  {\r\n    key:'home',title:'Home',icon:<HomeIcon />,path:\"/home\",main:()=> (<ItemList />)\r\n  },\r\n  {\r\n    key:'assets',title:'機器一覧',icon:<DesktopWindowsIcon />,path:\"/assets\",main:()=> (<ItemList />)\r\n  },\r\n  {\r\n    key:'employee',title:'従業員一覧',icon:<AccountCircleIcon />,path:\"/employee\",main:()=> (<ItemList />)\r\n  },\r\n  {\r\n    key:'master',title:'マスタ管理',icon:<StorageIcon />,path:\"/master\",main:()=> (<ItemList />)\r\n  }\r\n];\r\n\r\n\r\nfunction ListItemLink(props: ListItemLinkProps) {\r\n  const { icon, primary, to } = props;\r\n\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n        <RouterLink to={to} ref={ref} {...itemProps} />\r\n      )),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  const navlist = (anchor: Anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n    >\r\n    <List>\r\n      {MenuItems1.map((item, index) => (\r\n        <ListItemLink \r\n          icon={item.icon}\r\n          primary={item.title}\r\n          to={item.path}\r\n        />\r\n      ))}\r\n    </List>\r\n    </div>\r\n  );\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Grid container>\r\n          <Grid item xs={2} className={classes.nav}>\r\n            {navlist('left')}\r\n\r\n          </Grid>\r\n          <Grid xs={10}>\r\n          \r\n            <Switch>\r\n              {MenuItems1.map((route,index) => (\r\n              \r\n                <Route \r\n                  key={index}\r\n                  path={route.path}\r\n                  children={<route.main />}\r\n                />\r\n              ))}\r\n            </Switch>\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}