{"version":3,"sources":["components/pc-tab.tsx","components/account-tab.tsx","components/item-tab.tsx","components/Item-list.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PCTab","props","useState","data","pcInfo","setPcInfo","isLoading","setLoading","handleFormChange","e","console","log","target","name","value","className","Form","onSubmit","preventDefault","axios","post","withCredentials","then","response","Row","Col","xs","Group","controlId","Label","Control","as","defaultValue","makerName","onChange","map","index","type","pcTypeNumber","pcServiceTag","radio","Check","label","checked","assetKind","pcMemo","monitorNumber1","monitorNumber2","monitorNumber3","monitorMemo","mouseNumber","mouseMemo","keyboardNumber","keyboardMemo","Button","disabled","size","AccountTab","accountInfo","setAccountInfo","htmlfor","id_info","id_text","id_name","pw_text","pw_name","htmlFor","InputGroup","Prepend","Text","id","mailAddress","aria-describedby","mailPassword","ItemTab","key","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","title","SearchBar","Search","columns","dataField","text","sort","editable","expandRow","renderer","row","ItemList","useAxios","loading","error","rowEvents","onClick","rowIndex","pageOptions","keyField","search","searchProps","pagination","paginationFactory","bootstrap4","bordered","baseProps","App","fluid","variant","Item","Link","href","icon","faHome","faDesktop","faUser","faDatabase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kfA2OeA,EApOO,SAACC,GAAe,IAAD,EAELC,mBAASD,EAAME,MAFV,mBAE1BC,EAF0B,KAElBC,EAFkB,OAGDH,oBAAkB,GAHjB,mBAG1BI,EAH0B,KAGfC,EAHe,KAiC3BC,EAAmB,SAACC,GAExBC,QAAQC,IAAIF,EAAEG,OAAOC,KAAO,IAAMJ,EAAEG,OAAOE,OAC3CT,EAAU,2BAAID,GAAL,kBAAcK,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,UAKlD,OACE,qBAAKC,UAAU,aAAf,SACE,eAACC,EAAA,EAAD,CAAMC,SAzBa,SAACR,GACtBA,EAAES,iBAEFR,QAAQC,IAAIP,GACZG,GAAW,GAEXY,IACGC,KAAK,qDAAqDhB,EAAO,CAClEiB,iBAAiB,IAElBC,MAAK,SAAAC,GACJhB,GAAW,OAcX,UACE,eAACS,EAAA,EAAKQ,IAAN,WACE,cAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,eAACV,EAAA,EAAKW,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,uCAEA,cAACb,EAAA,EAAKc,QAAN,CAAcC,GAAG,SAASlB,KAAK,YAC7BmB,aAAc5B,EAAO6B,UAAWC,SAAU1B,EAD5C,SA5Cc,CACxB,OACA,QACA,KACA,YACA,QAyC+B2B,KAAI,SAACrB,EAAMsB,GAAP,OACrB,wBAAQtB,MAAOA,EAAf,SAAuBA,cAM/B,cAACW,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,eAACV,EAAA,EAAKW,MAAN,CAAYC,UAAU,eAAtB,UACA,cAACZ,EAAA,EAAKa,MAAN,2BACA,cAACb,EAAA,EAAKc,QAAN,CACIO,KAAK,OACLxB,KAAK,eACLC,MAAOV,EAAOkC,aACdJ,SAAU1B,SAMhB,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACV,EAAA,EAAKW,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,mDACA,cAACb,EAAA,EAAKc,QAAN,CACEO,KAAK,OACLxB,KAAK,eACLC,MAAOV,EAAOmC,aACdL,SAAU1B,SAKhB,cAACiB,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,eAACV,EAAA,EAAKW,MAAN,WACE,cAACX,EAAA,EAAKa,MAAN,2BAxEiB,CAC3B,CAAChB,KAAK,uCAASC,MAAM,wCACrB,CAACD,KAAK,qBAAMC,MAAM,uBAuEcqB,KAAI,SAACK,EAAMJ,GAAP,OACxB,cAACpB,EAAA,EAAKyB,MAAN,CACEJ,KAAK,QACLK,MAAOF,EAAM1B,MACbD,KAAK,YACLC,MAAO0B,EAAM1B,MACb6B,QAASvC,EAAOwC,YAAcJ,EAAM1B,MACpCoB,SAAU1B,eASpB,cAACQ,EAAA,EAAKQ,IAAN,UACE,cAACC,EAAA,EAAD,UACE,eAACT,EAAA,EAAKW,MAAN,CAAYC,UAAU,SAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,2BACA,cAACb,EAAA,EAAKc,QAAN,CACEO,KAAK,WACLxB,KAAK,SACLC,MAAOV,EAAOyC,OACdX,SAAU1B,WAOlB,eAACQ,EAAA,EAAKQ,IAAN,WACE,cAACC,EAAA,EAAD,UACE,eAACT,EAAA,EAAKW,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,wCACA,cAACb,EAAA,EAAKc,QAAN,CACIO,KAAK,OACLxB,KAAK,iBACLC,MAAOV,EAAO0C,eACdZ,SAAU1B,SAKlB,cAACiB,EAAA,EAAD,UACE,eAACT,EAAA,EAAKW,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,wCACA,cAACb,EAAA,EAAKc,QAAN,CACEO,KAAK,OACLxB,KAAK,iBACLC,MAAOV,EAAO2C,eACdb,SAAU1B,SAKhB,cAACiB,EAAA,EAAD,UACE,eAACT,EAAA,EAAKW,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,wCACA,cAACb,EAAA,EAAKc,QAAN,CACEO,KAAK,OACLxB,KAAK,iBACLC,MAAOV,EAAO4C,eACdd,SAAU1B,SAKhB,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACV,EAAA,EAAKW,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,mDACA,cAACb,EAAA,EAAKc,QAAN,CACEO,KAAK,WACLxB,KAAK,cACLC,MAAOV,EAAO6C,YACdf,SAAU1B,YAOlB,eAACQ,EAAA,EAAKQ,IAAN,WACE,cAACC,EAAA,EAAD,UACE,eAACT,EAAA,EAAKW,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,iCACA,cAACb,EAAA,EAAKc,QAAN,CACEO,KAAK,OACLxB,KAAK,cACLC,MAAOV,EAAO8C,YACdhB,SAAU1B,SAKhB,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACV,EAAA,EAAKW,MAAN,CAAYC,UAAU,YAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,6CACA,cAACb,EAAA,EAAKc,QAAN,CACEO,KAAK,WACLxB,KAAK,YACLC,MAAOV,EAAO+C,UACdjB,SAAU1B,SAKhB,cAACiB,EAAA,EAAD,UACE,eAACT,EAAA,EAAKW,MAAN,CAAYC,UAAU,iBAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,6CACA,cAACb,EAAA,EAAKc,QAAN,CACEO,KAAK,OACLxB,KAAK,iBACLC,MAAOV,EAAOgD,eACdlB,SAAU1B,SAKhB,cAACiB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACV,EAAA,EAAKW,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACZ,EAAA,EAAKa,MAAN,yDACA,cAACb,EAAA,EAAKc,QAAN,CACEO,KAAK,WACLxB,KAAK,eACLC,MAAOV,EAAOiD,aACdnB,SAAU1B,YAMlB,cAACQ,EAAA,EAAKQ,IAAN,UACE,cAACC,EAAA,EAAD,CAAKV,UAAU,eAAf,SACE,cAACuC,EAAA,EAAD,CAAQjB,KAAK,UAAUkB,SAAUjD,EAAWkD,KAAK,KAAjD,SAAuDlD,EAAY,gDAAe,2B,SC9IjFmD,G,OAhFa,SAACxD,GAAe,IAAD,EAEHC,mBAASD,EAAME,MAFZ,mBAElCuD,EAFkC,KAErBC,EAFqB,OAGTzD,oBAAkB,GAHT,mBAGlCI,EAHkC,KAGvBC,EAHuB,KA0CnCC,EAAmB,SAACC,GACxBkD,EAAe,2BAAID,GAAL,kBAAmBjD,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAC1DJ,QAAQC,IAAI,gBACZD,QAAQC,IAAI+C,IAGd,OACE,8BACE,eAAC1C,EAAA,EAAD,CAAMC,SAxBU,SAACR,GACnBA,EAAES,iBAEFR,QAAQC,IAAI+C,GACZnD,GAAW,GAEXY,IACGC,KAAK,qDAAqDsC,EAAY,CACvErC,iBAAiB,IAElBC,MAAK,SAAAC,GACJhB,GAAW,OAaX,UACE,cAACS,EAAA,EAAKQ,IAAN,UA9CmB,CACvB,CACEoC,QAAQ,QACRlB,MAAM,6CACNmB,QAAS,CACTC,QAAQ,UAAUC,QAAQ,cAAcC,QAAQ,KAAKC,QAAQ,iBAE/D,CACEL,QAAQ,WACRlB,MAAM,6CACNmB,QAAS,CACTC,QAAQ,KAAKC,QAAQ,cAAcC,QAAQ,KAAKC,QAAQ,gBAE1D,CACEL,QAAQ,UACRlB,MAAM,iCACNmB,QAAS,CACTC,QAAQ,KAAKC,QAAQ,aAAaC,QAAQ,KAAKC,QAAQ,gBA8BjC9B,KAAI,SAACrB,EAAMsB,GAAP,OACpB,eAACX,EAAA,EAAD,CAAKC,GAAG,OAAR,UACE,uBAAOwC,QAASpD,EAAM8C,QAAtB,SAAgC9C,EAAM4B,QACtC,eAACyB,EAAA,EAAD,CAAYpD,UAAU,OAAtB,UACE,cAACoD,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,eAApB,SAAoCxD,EAAM+C,QAAQC,YAEpD,cAAC9C,EAAA,EAAKc,QAAN,CAAcjB,KAAMC,EAAM+C,QAAQE,QAASjD,MAAO4C,EAAYa,YAAarC,SAAU1B,EAAkBgE,mBAAiB,oBAE1H,eAACL,EAAA,EAAD,CAAYpD,UAAU,OAAtB,UACE,cAACoD,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,eAApB,SAAoCxD,EAAM+C,QAAQG,YAEpD,cAAChD,EAAA,EAAKc,QAAN,CAAcjB,KAAMC,EAAM+C,QAAQI,QAASnD,MAAO4C,EAAYe,aAAcvC,SAAU1B,EAAkBgE,mBAAiB,4BAKjI,cAACxD,EAAA,EAAKQ,IAAN,UACI,cAACC,EAAA,EAAD,CAAKV,UAAU,eAAf,SACE,cAACuC,EAAA,EAAD,CAAQjB,KAAK,UAAUkB,SAAUjD,EAAWkD,KAAK,KAAjD,SAAuDlD,EAAY,gDAAe,4BCnDjFoE,EAnBQ,SAACzE,GAAc,IAAD,EACZC,mBAAS,MADG,mBAC1ByE,EAD0B,KACtBC,EADsB,KAGjC,OACE,eAACC,EAAA,EAAD,CAAMC,UAAWH,EACfI,SAAU,SAACC,GAAD,OAAWJ,EAAOI,IAD9B,UAGE,cAACC,EAAA,EAAD,CAAKC,SAAS,KAAKC,MAAM,KAAzB,SACE,cAAC,EAAD,CAAOhF,KAAMF,EAAME,SAErB,cAAC8E,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,iCAA9B,SACE,cAAC,EAAD,CAAYhF,KAAMF,EAAME,aCL1BiF,EAAcC,SAAdD,UAwBFE,EAAU,CACd,CAACC,UAAU,aAAmBC,KAAK,MAAWC,MAAK,EAAMC,UAAS,GAClE,CAACH,UAAU,gBAAmBC,KAAK,2BAAQC,MAAK,EAAMC,UAAS,GAC/D,CAACH,UAAU,aAAmBC,KAAK,2BAAQC,MAAK,EAAMC,UAAS,GAC/D,CAACH,UAAU,eAAmBC,KAAK,2BAAQC,MAAK,EAAMC,UAAS,GAC/D,CAACH,UAAU,iBAAmBC,KAAK,eAAUC,MAAK,EAAMC,UAAS,IAG7DC,EAAY,CAChBC,SAAS,SAACC,GAAD,OACP,8BACE,cAAC,EAAD,CAAS1F,KAAM0F,QA6DNC,EAvDM,WAAO,IAAD,EAEmBC,YACtC,qDAHmB,0BAEf5F,EAFe,EAEfA,KAAM6F,EAFS,EAETA,QAASC,EAFA,EAEAA,MAFA,KAOvB,GAAID,EAAS,OAAO,2CACpB,GAAIC,EAAO,OAAO,uCAGlB,IAAMC,EAAgB,CAClBC,QAAS,SAAC1F,EAAOoF,EAASO,GACtB1F,QAAQC,IAAIkF,KAIdQ,EAAkB,GAQxB,OACE,qBAAKtF,UAAU,kBAAf,SACE,cAAC,IAAD,CACEuF,SAAS,aACTnG,KAAMA,EACNmF,QAASA,EACTiB,QAAM,EAJR,SAMI,SAAAtG,GAAK,OACH,gCACE,8CACA,cAACmF,EAAD,eAAgBnF,EAAMuG,cACtB,uBACA,cAAC,IAAD,aACEN,UAAWA,EACXO,WAAaC,IAAkBL,GAC/BM,YAAY,EACZC,UAAU,EACVjB,UAAWA,GACN1F,EAAM4G,qB,gBC5CdC,MA3Cf,WAEE,OAEE,qBAAK/F,UAAU,OAAf,SACE,cAAC,IAAD,CAA0BgG,OAAK,EAA/B,SACE,eAAC,IAAD,WAEE,qBAAKhG,UAAU,UAAf,SACE,eAAC,IAAD,CAAoBiG,QAAQ,QAAQjG,UAAU,cAAcuD,GAAG,WAA/D,UACE,cAAC,IAAD,CAA4BA,GAAG,YAA/B,oDACE,cAAC,IAAmB2C,KAApB,UACE,eAAC,IAAmBC,KAApB,CAAyBC,KAAK,QAA9B,UAAsC,cAAC,IAAD,CAAiBC,KAAMC,MAA7D,YAGF,cAAC,IAAmBJ,KAApB,UACE,eAAC,IAAmBC,KAApB,CAAyBC,KAAK,SAA9B,UAAuC,cAAC,IAAD,CAAiBC,KAAME,MAA9D,gCAGF,cAAC,IAAmBL,KAApB,UACE,eAAC,IAAmBC,KAApB,CAAyBC,KAAK,YAA9B,UAA0C,cAAC,IAAD,CAAiBC,KAAMG,MAAjE,sCAGF,cAAC,IAAmBN,KAApB,UACE,eAAC,IAAmBC,KAApB,CAAyBC,KAAK,UAA9B,UAAwC,cAAC,IAAD,CAAiBC,KAAMI,MAA/D,2CAKR,cAAC,IAAD,CAAoBzG,UAAU,WAA9B,SACE,8BACE,cAAC,EAAD,gBC5BC0G,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrG,MAAK,YAAkD,IAA/CsG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6f28b477.chunk.js","sourcesContent":["import React,{FC, useState} from 'react';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\n// import useAxios from 'axios-hooks';\r\nimport './pc-tab.css';\r\nimport axios from 'axios';\r\n\r\n\r\nconst PCTab:FC<any> = (props:any) => {\r\n\r\n    const [pcInfo, setPcInfo] = useState(props.data);\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n    \r\n    const makerNameConboBox = [\r\n      \"DELL\",\r\n      \"Apple\",\r\n      \"HP\",\r\n      \"Microsoft\",\r\n      \"acer\"\r\n    ];\r\n\r\n    const assetKindRadioButton = [\r\n      {name:\"デスクトップ\",value:\"デスクトップ\" },\r\n      {name:\"ノート\",value:\"ノート\"}\r\n    ];\r\n\r\n    const OnSaveBtnClick = (e:any) => {\r\n      e.preventDefault();\r\n      \r\n      console.log(pcInfo);\r\n      setLoading(true);\r\n\r\n      axios\r\n        .post('http://localhost:5000/api/itmanagement/postpcitems',pcInfo,{\r\n        withCredentials: false\r\n      })\r\n      .then(response => {\r\n        setLoading(false)\r\n      });\r\n    };\r\n\r\n    const handleFormChange = (e:any) => {\r\n\r\n      console.log(e.target.name + ':' + e.target.value);\r\n      setPcInfo({...pcInfo, [e.target.name]: e.target.value});\r\n\r\n      // console.log('assetkind:' + pcInfo.assetKind);\r\n    };\r\n\r\n    return(\r\n      <div className=\"tab-border\">\r\n        <Form onSubmit={OnSaveBtnClick} >\r\n          <Form.Row>\r\n            <Col xs=\"auto\">\r\n              <Form.Group controlId=\"makerName\" >\r\n                <Form.Label>メーカー</Form.Label>\r\n\r\n                <Form.Control as=\"select\" name=\"makerName\" \r\n                  defaultValue={pcInfo.makerName} onChange={handleFormChange}>\r\n                  {makerNameConboBox.map((value,index) => (\r\n                    <option value={value}>{value}</option>\r\n                  ))}  \r\n                </Form.Control>   \r\n              </Form.Group>\r\n            </Col>\r\n              \r\n            <Col xs=\"auto\">\r\n              <Form.Group controlId=\"pcTypeNumber\">\r\n              <Form.Label>型番</Form.Label>\r\n              <Form.Control \r\n                  type=\"text\"\r\n                  name=\"pcTypeNumber\"\r\n                  value={pcInfo.pcTypeNumber}\r\n                  onChange={handleFormChange} \r\n                  \r\n              />   \r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col xs={5}>\r\n              <Form.Group controlId=\"pcServiceTag\">\r\n                <Form.Label>サービスタグ</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name=\"pcServiceTag\"\r\n                  value={pcInfo.pcServiceTag}\r\n                  onChange={handleFormChange} \r\n                />   \r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col xs=\"auto\">\r\n              <Form.Group>\r\n                <Form.Label>種別</Form.Label>\r\n                {assetKindRadioButton.map((radio,index) => (\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    label={radio.value}\r\n                    name=\"assetKind\"\r\n                    value={radio.value}\r\n                    checked={pcInfo.assetKind === radio.value ? true: false}\r\n                    onChange={handleFormChange}\r\n                  />\r\n                ))}\r\n                         \r\n              </Form.Group> \r\n            </Col>\r\n                   \r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"pcMemo\">\r\n                <Form.Label>備考</Form.Label>\r\n                <Form.Control \r\n                  type=\"textarea\"\r\n                  name=\"pcMemo\"\r\n                  value={pcInfo.pcMemo}\r\n                  onChange={handleFormChange} \r\n                  />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"monitorNumber1\">\r\n                <Form.Label>モニター1</Form.Label>\r\n                <Form.Control \r\n                    type=\"text\"\r\n                    name=\"monitorNumber1\"\r\n                    value={pcInfo.monitorNumber1}\r\n                    onChange={handleFormChange}\r\n                />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Group controlId=\"monitorNumber2\">\r\n                <Form.Label>モニター2</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name=\"monitorNumber2\"\r\n                  value={pcInfo.monitorNumber2}\r\n                  onChange={handleFormChange}\r\n                />   \r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Group controlId=\"monitorNumber3\">\r\n                <Form.Label>モニター3</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name=\"monitorNumber3\"\r\n                  value={pcInfo.monitorNumber3}\r\n                  onChange={handleFormChange}\r\n                />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n            <Col xs={7}>\r\n              <Form.Group controlId=\"monitorMemo\">\r\n                <Form.Label>モニター備考</Form.Label>\r\n                <Form.Control \r\n                  type=\"textarea\"\r\n                  name=\"monitorMemo\"\r\n                  value={pcInfo.monitorMemo}\r\n                  onChange={handleFormChange}\r\n                />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"mouseNumber\">\r\n                <Form.Label>マウス</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name=\"mouseNumber\"\r\n                  value={pcInfo.mouseNumber}\r\n                  onChange={handleFormChange}\r\n                />   \r\n              </Form.Group>             \r\n            </Col>\r\n\r\n            <Col xs={4}>\r\n              <Form.Group controlId=\"mouseMemo\">\r\n                <Form.Label>マウス備考</Form.Label>\r\n                <Form.Control \r\n                  type=\"textarea\"\r\n                  name=\"mouseMemo\"\r\n                  value={pcInfo.mouseMemo}\r\n                  onChange={handleFormChange}\r\n                />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Group controlId=\"keyboardNumber\">\r\n                <Form.Label>キーボード</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name=\"keyboardNumber\"\r\n                  value={pcInfo.keyboardNumber}\r\n                  onChange={handleFormChange}\r\n                />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n            <Col xs={4}>\r\n              <Form.Group controlId=\"keyboardMemo\">\r\n                <Form.Label>キーボード備考</Form.Label>\r\n                <Form.Control \r\n                  type=\"textarea\"\r\n                  name=\"keyboardMemo\"\r\n                  value={pcInfo.keyboardMemo}\r\n                  onChange={handleFormChange}\r\n                />   \r\n              </Form.Group> \r\n            </Col>\r\n  \r\n          </Form.Row>\r\n          <Form.Row >\r\n            <Col className=\"row-save-btn\">\r\n              <Button type=\"submitt\" disabled={isLoading} size=\"lg\">{isLoading ? '保存しています...' : '保存'}</Button>\r\n            </Col>\r\n          </Form.Row>                                                                                                                                                    \r\n        </Form>    \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default PCTab;","import React,{FC, useState} from 'react';\r\nimport { Button, Form, Col, InputGroup } from 'react-bootstrap';\r\nimport './account-tab.css';\r\nimport axios from 'axios';\r\n\r\nconst AccountTab: FC<any> = (props:any) => {\r\n\r\n  const [accountInfo, setAccountInfo] = useState(props.data);\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  const accountInfoItems = [\r\n    {\r\n      htmlfor:\"email\",\r\n      label:\"メールアドレス\", \r\n      id_info: {\r\n      id_text:\"Address\",id_name:\"mailAddress\",pw_text:\"PW\",pw_name:\"mailPassword\"} \r\n    },\r\n    {\r\n      htmlfor:\"chatwork\",\r\n      label:\"チャットワーク\", \r\n      id_info: {\r\n      id_text:\"ID\",id_name:\"chatwork_ID\",pw_text:\"PW\",pw_name:\"chatwork_PW\"} \r\n    },\r\n    {\r\n      htmlfor:\"cybouzu\",\r\n      label:\"サイボウズ\", \r\n      id_info: {\r\n      id_text:\"ID\",id_name:\"cybouzu_ID\",pw_text:\"PW\",pw_name:\"cybouzu_PW\"} \r\n    },\r\n  ];\r\n\r\n  const OnSaveClick = (e:any) => {\r\n    e.preventDefault();\r\n      \r\n    console.log(accountInfo);\r\n    setLoading(true);\r\n\r\n    axios\r\n      .post('http://localhost:5000/api/itmanagement/postpcitems',accountInfo,{\r\n      withCredentials: false\r\n    })\r\n    .then(response => {\r\n      setLoading(false)\r\n    });\r\n\r\n  };\r\n\r\n  const handleFormChange = (e:any) => {\r\n    setAccountInfo({...accountInfo, [e.target.name]: e.target.value});\r\n    console.log('accountInfo:');\r\n    console.log(accountInfo);\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <Form onSubmit={OnSaveClick}>\r\n        <Form.Row>\r\n          {accountInfoItems.map((value,index) => (\r\n            <Col xs=\"auto\">\r\n              <label htmlFor={value.htmlfor}>{value.label}</label>\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon3\">{value.id_info.id_text}</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control name={value.id_info.id_name} value={accountInfo.mailAddress} onChange={handleFormChange} aria-describedby=\"basic-addon3\" />\r\n              </InputGroup>\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"basic-addon3\">{value.id_info.pw_text}</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control name={value.id_info.pw_name} value={accountInfo.mailPassword} onChange={handleFormChange} aria-describedby=\"basic-addon3\" />\r\n              </InputGroup> \r\n            </Col>\r\n          ))}\r\n        </Form.Row>\r\n        <Form.Row >\r\n            <Col className=\"row-save-btn\">\r\n              <Button type=\"submitt\" disabled={isLoading} size=\"lg\">{isLoading ? '保存しています...' : '保存'}</Button>\r\n            </Col>\r\n          </Form.Row>  \r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountTab;","import React,{FC, useState} from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './item-tab.css';\r\nimport PCTab from './pc-tab';\r\nimport AccountTab from './account-tab'; \r\n\r\nconst ItemTab:FC<any> =(props:any) =>{\r\n    const [key,setKey] = useState('pc');\r\n    \r\n    return(\r\n      <Tabs activeKey={key}\r\n        onSelect={(k:any) => setKey(k)}>\r\n\r\n        <Tab eventKey=\"pc\" title=\"PC\">\r\n          <PCTab data={props.data} />\r\n        </Tab>\r\n        <Tab eventKey=\"account\" title=\"アカウント\">\r\n          <AccountTab data={props.data} />\r\n        </Tab>          \r\n      </Tabs>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default ItemTab;","import React, {FC} from 'react';\r\nimport useAxios from 'axios-hooks';\r\n\r\nimport './Item-list.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\n\r\nimport ItemTab from './item-tab';\r\n\r\nconst { SearchBar } = Search;\r\n\r\n// interface ColumItems {\r\n//   pcItemCode:string,\r\n//   assetKindCode:string,\r\n//   itemNumber:string,\r\n//   employeeName:string,\r\n//   departmentName:string,\r\n// }\r\n\r\ninterface DetailItems {\r\n  makerName:string,\r\n  pcTypeNumber:string,\r\n  pcServiceTag:string,\r\n  assetKind:string,\r\n  pcMemo:string,\r\n  monitorNumber1:string,\r\n  monitorNumber2:string,\r\n  monitorNumber3:string,\r\n  mouseMemo:string,\r\n  mouseNumber:string,\r\n\r\n}\r\n\r\nconst columns = [\r\n  {dataField:\"pcItemCode\"     , text:\"No.\"     ,sort:true, editable:false},\r\n  {dataField:\"assetKindCode\"  , text:\"資産種別\" ,sort:true, editable:false},\r\n  {dataField:\"itemNumber\"     , text:\"備品番号\" ,sort:true, editable:false},\r\n  {dataField:\"employeeName\"   , text:\"従業員名\" ,sort:true, editable:false},\r\n  {dataField:\"departmentName\" , text:\"部署\"     ,sort:true, editable:false}\r\n];\r\n\r\nconst expandRow = {\r\n  renderer:(row:DetailItems) => (\r\n    <div>\r\n      <ItemTab data={row}  />\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nconst ItemList: FC = () => {\r\n\r\n    const [{data, loading, error}, refetch] = useAxios(\r\n        'http://localhost:5000/api/itmanagement/getpcitems'\r\n        // 'http://192.168.1.80:5003/PCItems'\r\n    );\r\n    \r\n    if (loading) return <p>loading...</p>\r\n    if (error) return <p>Error!</p>\r\n\r\n\r\n    const rowEvents:any = {\r\n        onClick: (e:any, row:any, rowIndex:number) =>  {\r\n            console.log(row);\r\n        }\r\n    };\r\n\r\n    const pageOptions:any = {\r\n        \r\n    };\r\n\r\n    // const afterSearch:any = (newResult:any) => {\r\n    //     console.log(newResult);\r\n    // };\r\n\r\n    return(\r\n      <div className=\"item-list-table\">\r\n        <ToolkitProvider\r\n          keyField=\"pcItemCode\"\r\n          data={data}\r\n          columns={columns}\r\n          search> \r\n          {\r\n            props => (\r\n              <div>\r\n                <h3>検索</h3>\r\n                <SearchBar { ...props.searchProps } />\r\n                <hr />\r\n                <BootstrapTable \r\n                  rowEvents={rowEvents}\r\n                  pagination={ paginationFactory(pageOptions)}\r\n                  bootstrap4={true}\r\n                  bordered={true}\r\n                  expandRow={expandRow}\r\n                  { ...props.baseProps }                            \r\n                />\r\n              </div>    \r\n              )\r\n            }  \r\n            </ToolkitProvider>\r\n         </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ItemList;","import React from 'react';\r\n\r\nimport \"bootswatch/dist/darkly/bootstrap.min.css\";\r\nimport './App.css';\r\nimport * as ReactBootstrap from 'react-bootstrap';\r\n\r\nimport ItemList from './components/Item-list';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faHome,faDesktop,faUser,faDatabase} from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction App() {\r\n \r\n  return (\r\n\r\n    <div className=\"body\">\r\n      <ReactBootstrap.Container fluid>\r\n        <ReactBootstrap.Row>  \r\n \r\n          <div className=\"col_nav\">\r\n            <ReactBootstrap.Nav variant=\"pills\" className=\"flex-column\" id=\"menu-nav\">\r\n              <ReactBootstrap.NavbarBrand id=\"app-title\">IT資産管理台帳</ReactBootstrap.NavbarBrand>\r\n                <ReactBootstrap.Nav.Item>\r\n                  <ReactBootstrap.Nav.Link href=\"/home\"><FontAwesomeIcon icon={faHome} />Home</ReactBootstrap.Nav.Link>\r\n                </ReactBootstrap.Nav.Item>\r\n\r\n                <ReactBootstrap.Nav.Item>\r\n                  <ReactBootstrap.Nav.Link href=\"/items\"><FontAwesomeIcon icon={faDesktop}/>機器一覧</ReactBootstrap.Nav.Link>\r\n                </ReactBootstrap.Nav.Item>\r\n\r\n                <ReactBootstrap.Nav.Item>\r\n                  <ReactBootstrap.Nav.Link href=\"/employee\"><FontAwesomeIcon icon={faUser} />従業員一覧</ReactBootstrap.Nav.Link>\r\n                </ReactBootstrap.Nav.Item>\r\n\r\n                <ReactBootstrap.Nav.Item>\r\n                  <ReactBootstrap.Nav.Link href=\"/master\"><FontAwesomeIcon icon={faDatabase}/>マスタ管理</ReactBootstrap.Nav.Link>\r\n                </ReactBootstrap.Nav.Item>       \r\n            </ReactBootstrap.Nav>\r\n\r\n          </div>\r\n          <ReactBootstrap.Col className=\"col_main\">\r\n            <div>\r\n              <ItemList />\r\n            </div>\r\n \r\n          </ReactBootstrap.Col>\r\n\r\n        </ReactBootstrap.Row>\r\n      </ReactBootstrap.Container>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}