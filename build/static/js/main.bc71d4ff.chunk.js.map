{"version":3,"sources":["components/tableIcons.tsx","components/pc-tab.tsx","components/item-tab.tsx","components/Item-list.tsx","components/sidenav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","PCTab","useState","title","field","lookup","columns","pcInfo","setPcInfo","useEffect","newPcInfo","makerName","data","pcTypeNumber","icons","TabPanel","children","value","index","other","role","hidden","id","araia-labelledby","Box","p","allyProps","useStyles","makeStyles","theme","root","flexGrow","AppBar","backgroundColor","ItemTab","classes","setValue","className","position","Tabs","onChange","event","newValue","aria-label","Tab","label","useStyle","detailButton","ItemList","setData","axios","get","then","result","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","dataUpdate","tableData","options","filtering","pageSize","detailPanel","rowData","createStyles","list","width","paddingTop","spacing","ListItemLink","icon","primary","to","renderLink","React","useMemo","itemProps","ListItem","button","component","ListItemIcon","ListItemText","SideNav","Fragment","Drawer","anchor","open","variant","paper","List","menu","map","item","path","display","appBar","zIndex","drawer","main","content","padding","MenuItems","key","App","route","Toolbar","Typography","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc71d4ff.chunk.js","sourcesContent":["import React,{forwardRef} from 'react';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport  { Icons } from 'material-table';\r\n\r\n\r\nexport const tableIcons:Icons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  }; ","import React,{FC, useEffect, useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {tableIcons} from './tableIcons';\r\n\r\n// import useAxios from 'axios-hooks';\r\n\r\nimport axios from 'axios';\r\n\r\ninterface PCItem {\r\n  makerName:string;\r\n  pcTypeNumber:string;\r\n}\r\n\r\nconst PCTab:FC<{data:any}> = (props:{data:any}) => {\r\n\r\n  const [columns, setColumns] = useState<any>([\r\n    {\r\n      title: 'メーカー',field:'makerName',lookup: \r\n      {'DELL':'DELL','Apple':'Apple','HP':'HP','Microsoft':'Microsoft','acer':'acer'}\r\n    },\r\n    { \r\n      title: '型番', field:'pcTypeNumber'\r\n    }\r\n  ]);\r\n\r\n  const [pcInfo,setPcInfo] = useState<PCItem[]>([]);\r\n  \r\n  useEffect(() => {\r\n    const newPcInfo = [...pcInfo,{makerName: props.data.makerName,pcTypeNumber: props.data.pcTypeNumber}];\r\n    setPcInfo(newPcInfo);\r\n  },[]);\r\n\r\n  return(\r\n      <MaterialTable \r\n      title=\"\"\r\n      columns={columns}\r\n      data={[...pcInfo]}\r\n      icons={tableIcons}\r\n    /> \r\n  );\r\n\r\n    // const [pcInfo, setPcInfo] = useState(props.data);\r\n    // const [isLoading, setLoading] = useState<boolean>(false);\r\n    \r\n    // const makerNameConboBox = [\r\n    //   \"DELL\",\r\n    //   \"Apple\",\r\n    //   \"HP\",\r\n    //   \"Microsoft\",\r\n    //   \"acer\"\r\n    // ];\r\n\r\n    // const assetKindRadioButton = [\r\n    //   {name:\"デスクトップ\",value:\"デスクトップ\" },\r\n    //   {name:\"ノート\",value:\"ノート\"}\r\n    // ];\r\n\r\n    // const OnSaveBtnClick = (e:any) => {\r\n    //   e.preventDefault();\r\n      \r\n    //   console.log(pcInfo);\r\n    //   setLoading(true);\r\n\r\n    //   axios\r\n    //     .post('http://localhost:5000/api/itmanagement/postpcitems',pcInfo,{\r\n    //     withCredentials: false\r\n    //   })\r\n    //   .then(response => {\r\n    //     setLoading(false)\r\n    //   });\r\n    // };\r\n\r\n    // const handleFormChange = (e:any) => {\r\n\r\n    //   console.log(e.target.name + ':' + e.target.value);\r\n    //   setPcInfo({...pcInfo, [e.target.name]: e.target.value});\r\n\r\n    //   // console.log('assetkind:' + pcInfo.assetKind);\r\n    // };\r\n\r\n    // return(\r\n    //   <div className=\"tab-border\">\r\n    //     <Form onSubmit={OnSaveBtnClick} >\r\n    //       <Form.Row>\r\n    //         <Col xs=\"auto\">\r\n    //           <Form.Group controlId=\"makerName\" >\r\n    //             <Form.Label>メーカー</Form.Label>\r\n\r\n    //             <Form.Control as=\"select\" name=\"makerName\" \r\n    //               defaultValue={pcInfo.makerName} onChange={handleFormChange}>\r\n    //               {makerNameConboBox.map((value,index) => (\r\n    //                 <option value={value}>{value}</option>\r\n    //               ))}  \r\n    //             </Form.Control>   \r\n    //           </Form.Group>\r\n    //         </Col>\r\n              \r\n    //         <Col xs=\"auto\">\r\n    //           <Form.Group controlId=\"pcTypeNumber\">\r\n    //           <Form.Label>型番</Form.Label>\r\n    //           <Form.Control \r\n    //               type=\"text\"\r\n    //               name=\"pcTypeNumber\"\r\n    //               value={pcInfo.pcTypeNumber}\r\n    //               onChange={handleFormChange} \r\n                  \r\n    //           />   \r\n    //           </Form.Group>\r\n    //         </Col>\r\n\r\n    //         <Col xs={5}>\r\n    //           <Form.Group controlId=\"pcServiceTag\">\r\n    //             <Form.Label>サービスタグ</Form.Label>\r\n    //             <Form.Control \r\n    //               type=\"text\"\r\n    //               name=\"pcServiceTag\"\r\n    //               value={pcInfo.pcServiceTag}\r\n    //               onChange={handleFormChange} \r\n    //             />   \r\n    //           </Form.Group>\r\n    //         </Col>\r\n\r\n    //         <Col xs=\"auto\">\r\n    //           <Form.Group>\r\n    //             <Form.Label>種別</Form.Label>\r\n    //             {assetKindRadioButton.map((radio,index) => (\r\n    //               <Form.Check\r\n    //                 type=\"radio\"\r\n    //                 label={radio.value}\r\n    //                 name=\"assetKind\"\r\n    //                 value={radio.value}\r\n    //                 checked={pcInfo.assetKind === radio.value ? true: false}\r\n    //                 onChange={handleFormChange}\r\n    //               />\r\n    //             ))}\r\n                         \r\n    //           </Form.Group> \r\n    //         </Col>\r\n                   \r\n    //       </Form.Row>\r\n\r\n    //       <Form.Row>\r\n    //         <Col>\r\n    //           <Form.Group controlId=\"pcMemo\">\r\n    //             <Form.Label>備考</Form.Label>\r\n    //             <Form.Control \r\n    //               type=\"textarea\"\r\n    //               name=\"pcMemo\"\r\n    //               value={pcInfo.pcMemo}\r\n    //               onChange={handleFormChange} \r\n    //               />   \r\n    //           </Form.Group>            \r\n    //         </Col>\r\n\r\n    //       </Form.Row>\r\n\r\n    //       <Form.Row>\r\n    //         <Col>\r\n    //           <label htmlFor=\"monitor\">モニター</label>\r\n    //           <InputGroup className=\"mb-3\">\r\n    //             <InputGroup.Prepend>\r\n    //               <InputGroup.Text id=\"basic-addon1\">1</InputGroup.Text>\r\n    //             </InputGroup.Prepend>\r\n    //             <Form.Control name=\"monitorNumber1\" value={pcInfo.monitorNumber1} onChange={handleFormChange} aria-describedby=\"basic-addon1\" />\r\n    //           </InputGroup>\r\n    //           <InputGroup className=\"mb-3\">\r\n    //             <InputGroup.Prepend>\r\n    //               <InputGroup.Text id=\"basic-addon2\">2</InputGroup.Text>\r\n    //             </InputGroup.Prepend>\r\n    //             <Form.Control name=\"monitorNumber2\" value={pcInfo.monitorNumber2} onChange={handleFormChange} aria-describedby=\"basic-addon2\" />\r\n    //           </InputGroup>\r\n    //           <InputGroup className=\"mb-3\">\r\n    //             <InputGroup.Prepend>\r\n    //               <InputGroup.Text id=\"basic-addon3\">3</InputGroup.Text>\r\n    //             </InputGroup.Prepend>\r\n    //             <Form.Control name=\"monitorNumber3\" value={pcInfo.monitorNumber3} onChange={handleFormChange} aria-describedby=\"basic-addon3\" />\r\n    //           </InputGroup>\r\n\r\n    //         </Col>\r\n\r\n    //         <Col xs={10}>\r\n    //           <Form.Group controlId=\"monitorMemo\">\r\n    //             <Form.Label>モニター備考</Form.Label>\r\n    //             <Form.Control \r\n    //               type=\"textarea\"\r\n    //               name=\"monitorMemo\"\r\n    //               value={pcInfo.monitorMemo}\r\n    //               onChange={handleFormChange}\r\n    //             />   \r\n    //           </Form.Group>            \r\n    //         </Col>\r\n\r\n    //       </Form.Row>\r\n\r\n    //       <Form.Row>\r\n    //         <Col>\r\n    //           <Form.Group controlId=\"mouseNumber\">\r\n    //             <Form.Label>マウス</Form.Label>\r\n    //             <Form.Control \r\n    //               type=\"text\"\r\n    //               name=\"mouseNumber\"\r\n    //               value={pcInfo.mouseNumber}\r\n    //               onChange={handleFormChange}\r\n    //             />   \r\n    //           </Form.Group>             \r\n    //         </Col>\r\n\r\n    //         <Col xs={4}>\r\n    //           <Form.Group controlId=\"mouseMemo\">\r\n    //             <Form.Label>マウス備考</Form.Label>\r\n    //             <Form.Control \r\n    //               type=\"textarea\"\r\n    //               name=\"mouseMemo\"\r\n    //               value={pcInfo.mouseMemo}\r\n    //               onChange={handleFormChange}\r\n    //             />   \r\n    //           </Form.Group>            \r\n    //         </Col>\r\n\r\n    //         <Col>\r\n    //           <Form.Group controlId=\"keyboardNumber\">\r\n    //             <Form.Label>キーボード</Form.Label>\r\n    //             <Form.Control \r\n    //               type=\"text\"\r\n    //               name=\"keyboardNumber\"\r\n    //               value={pcInfo.keyboardNumber}\r\n    //               onChange={handleFormChange}\r\n    //             />   \r\n    //           </Form.Group>            \r\n    //         </Col>\r\n\r\n    //         <Col xs={4}>\r\n    //           <Form.Group controlId=\"keyboardMemo\">\r\n    //             <Form.Label>キーボード備考</Form.Label>\r\n    //             <Form.Control \r\n    //               type=\"textarea\"\r\n    //               name=\"keyboardMemo\"\r\n    //               value={pcInfo.keyboardMemo}\r\n    //               onChange={handleFormChange}\r\n    //             />   \r\n    //           </Form.Group> \r\n    //         </Col>\r\n  \r\n    //       </Form.Row>\r\n    //       <Form.Row >\r\n    //         <Col className=\"row-save-btn\">\r\n    //           <Button type=\"submitt\" disabled={isLoading} size=\"lg\">{isLoading ? '保存しています...' : '保存'}</Button>\r\n    //         </Col>\r\n    //       </Form.Row>                                                                                                                                                    \r\n    //     </Form>    \r\n    // </div>\r\n    // );\r\n}\r\n\r\nexport default PCTab;","import React,{FC, ReactNode, useEffect, useState} from 'react';\r\nimport { makeStyles,Theme} from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport PCTab from './pc-tab';\r\n\r\nimport AccountTab from './account-tab'; \r\nimport { Typography } from '@material-ui/core';\r\nimport { ContactSupportOutlined } from '@material-ui/icons';\r\n\r\ninterface TabPanelProps {\r\n  children?: ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return(\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      araia-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            {children}\r\n          </Box>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst allyProps = (index: any) => {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow:1,\r\n    // backgroundColor: theme.palette.background.paper,\r\n  },\r\n  AppBar: {\r\n    backgroundColor: '#6163FF',\r\n  }\r\n}));\r\n\r\n\r\nconst ItemTab:FC<any> =(props:any) =>{\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  \r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log('data:');\r\n    // console.log(props.data); \r\n  });\r\n\r\n  return(\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.AppBar}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simpla tabs example\" >\r\n          <Tab label=\"PC\" {...allyProps(0)} />\r\n          <Tab label=\"アカウント\" {...allyProps(0)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}> \r\n        <div>\r\n          <PCTab data={props.data} />\r\n        </div>\r\n\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        {/* <AccountTab data={props.data} /> */}\r\n      </TabPanel>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default ItemTab;","import React, {FC,forwardRef,useState,useEffect} from 'react';\r\nimport useAxios from 'axios-hooks';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport ItemTab from './item-tab';\r\nimport {tableIcons} from './tableIcons';\r\nimport { colors, makeStyles } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\n// interface ColumItems {\r\n//   pcItemCode:string,\r\n//   assetKindCode:string,\r\n//   itemNumber:string,\r\n//   employeeName:string,\r\n//   departmentName:string,\r\n// }\r\n\r\ninterface DetailItems {\r\n  makerName:string,\r\n  pcTypeNumber:string,\r\n  pcServiceTag:string,\r\n  assetKind:string,\r\n  pcMemo:string,\r\n  monitorNumber1:string,\r\n  monitorNumber2:string,\r\n  monitorNumber3:string,\r\n  mouseMemo:string,\r\n  mouseNumber:string,\r\n\r\n}\r\n\r\nconst useStyle = makeStyles({\r\n  root : {\r\n    '& *': {\r\n      \"background\": '#252525',\r\n      \"color\": 'whitesmoke',\r\n      \"font-size\": 'calc(20px + 1vmin)'\r\n    }\r\n  },\r\n  detailButton: {\r\n    '& *:active':{\r\n      'outline': 'none'\r\n    }\r\n  }\r\n});\r\n\r\nconst columns = [\r\n  {field:\"pcItemCode\"     , title:\"No.\"},\r\n  {field:\"assetKindCode\"  , title:\"資産種別\"},\r\n  {field:\"itemNumber\"     , title:\"備品番号\"},\r\n  {field:\"employeeName\"   , title:\"従業員名\"},\r\n  {field:\"departmentName\" , title:\"部署\"}\r\n];\r\n\r\n\r\nconst ItemList: FC = () => {\r\n  const classes = useStyle();\r\n  const [data,setData] = useState<any>([]);\r\n\r\n  useEffect(()=> {\r\n    axios.get('http://localhost:5000/api/itmanagement/getpcitems')\r\n    .then((result) => {\r\n      setData(result.data);\r\n    });\r\n\r\n  },[]);\r\n\r\n\r\n  // const [{data, loading, error}] = useAxios(\r\n  //     'http://localhost:5000/api/itmanagement/getpcitems'\r\n  //     // 'http://192.168.1.80:5003/PCItems'\r\n  // );\r\n  \r\n  // if (loading) return <p>loading...</p>\r\n  // if (error) return <p>Error!</p>\r\n\r\n  return(\r\n    <div >\r\n      <MaterialTable \r\n        title=\"\"\r\n        columns={columns}\r\n        data={data}\r\n        icons={tableIcons}\r\n        editable={{\r\n          onRowUpdate:(newData:any,oldData:any) => \r\n            new Promise((resolve:any,reject:any) => {\r\n              const dataUpdate = [...data];\r\n              const index = oldData.tableData.id;\r\n              dataUpdate[index] = newData;\r\n              setData([...dataUpdate]);\r\n              resolve();              \r\n\r\n            })  \r\n        }}\r\n        options={{\r\n          filtering:true,\r\n          pageSize:10\r\n        }}\r\n        detailPanel={(rowData:any) => {\r\n          return(\r\n            <ItemTab data={rowData} />\r\n            // <h2>{rowData.employeeName}</h2>\r\n          )\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemList;","import React,{FC, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link as RouterLink, LinkProps as RouterLinkProps\r\n} from \"react-router-dom\";\r\nimport { createStyles, makeStyles,Theme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    list: {\r\n      width: 240,\r\n      paddingTop: theme.spacing(4),\r\n    }\r\n}));\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\n\r\n\r\nexport interface Menu {\r\n  key:string;\r\n  title:string;\r\n  icon:any;\r\n  path:string;\r\n  main:() => any;\r\n};\r\n\r\ninterface ListItemLinkProps {\r\n  icon?: React.ReactElement;\r\n  primary: string;\r\n  to: string;\r\n}\r\n\r\nfunction ListItemLink(props: ListItemLinkProps) {\r\n  const { icon, primary, to } = props;\r\n\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n        <RouterLink to={to} ref={ref} {...itemProps}  />\r\n      )),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst SideNav:FC<{menu:Menu[]}> = (props:{menu:Menu[]}) => {\r\n  const classes = useStyles();\r\n\r\n  const list = (anchor: Anchor) => (\r\n    <div\r\n      className={classes.list}\r\n      // className={clsx(classes.list, {\r\n      //   [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      // })}\r\n    >\r\n      <List>\r\n        {props.menu.map((item, index) => (\r\n          <ListItemLink \r\n            icon={item.icon}\r\n            primary={item.title}\r\n            to={item.path}      \r\n          />\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        className={classes.list}\r\n        anchor='left'\r\n        open={true}\r\n        variant=\"permanent\"\r\n        classes= {{\r\n          paper:classes.list\r\n        }}\r\n      >\r\n        {list('left')}\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default SideNav;","import React,{FC,forwardRef, useMemo} from 'react';\r\nimport clsx from 'clsx';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link as RouterLink, LinkProps as RouterLinkProps\r\n} from \"react-router-dom\";\r\nimport MaterialTable, { Icons } from 'material-table';\r\nimport Container from '@material-ui/core/Container';\r\nimport {makeStyles, createStyles, Theme}  from '@material-ui/core/styles';\r\nimport useAxios from 'axios-hooks';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\n\r\nimport {Menu} from './Interface';\r\n// import './App.css';\r\nimport ItemList from './components/Item-list';\r\n\r\nimport SideNav from './components/sidenav';\r\nimport { AppBar, CssBaseline, Drawer, Toolbar, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    root: {\r\n  \r\n      // '& *':{\r\n      //   // backgroundColor:'black',\r\n      //   // color:'white'\r\n  \r\n      // },\r\n      display:'flex',\r\n    },\r\n    appBar: {\r\n      zIndex:theme.zIndex.drawer + 1\r\n    },\r\n    main: {\r\n      paddingTop:theme.spacing(4),\r\n    },\r\n    title: {\r\n      flexGrow:1,\r\n    },\r\n    list: {\r\n      width: 240,\r\n     \r\n    },\r\n    content: {\r\n      padding: theme.spacing(1)\r\n    }\r\n  }) \r\n);\r\n\r\nconst MenuItems:Menu[] = [\r\n  {\r\n    key:'home',title:'Home',icon:<HomeIcon />,path:\"/home\",main:() => (<ItemList />)\r\n  },\r\n  {\r\n    key:'assets',title:'機器一覧',icon:<DesktopWindowsIcon />,path:\"/assets\",main:()=> (<h1>機器一覧</h1>)\r\n  },\r\n  {\r\n    key:'employee',title:'従業員一覧',icon:<AccountCircleIcon />,path:\"/employee\",main:()=> (<h1>従業員一覧</h1>)\r\n  },\r\n  {\r\n    key:'master',title:'マスタ管理',icon:<StorageIcon />,path:\"/master\",main:()=> (<h1>マスタ管理</h1>)\r\n  }\r\n];\r\n\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Router>\r\n        <div className={classes.root}>\r\n          <SideNav menu={MenuItems}  />\r\n          <main className={classes.main}>\r\n            <div>\r\n              <Switch>\r\n                {MenuItems.map((route,index) => (            \r\n                  <Route \r\n                    key={index}\r\n                    path={route.path}\r\n                    children={<route.main />}\r\n                  />\r\n                ))}\r\n              </Switch>\r\n            </div>\r\n          </main>\r\n        </div>  \r\n      </Router>\r\n\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar variant=\"dense\">\r\n        <Typography variant=\"h6\" className={classes.title}>IT資産管理台帳</Typography>\r\n      </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}