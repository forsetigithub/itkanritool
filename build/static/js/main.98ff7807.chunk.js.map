{"version":3,"sources":["components/pc-tab.tsx","components/item-tab.tsx","components/Item-list.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PCTab","props","useState","data","pcInfo","setPcInfo","isLoading","setLoading","handleFormChange","e","target","name","value","console","log","useAxios","url","method","loading","error","useEffect","className","Form","onSubmit","preventDefault","Row","Col","xs","Group","controlId","Label","Control","as","custom","onChange","selected","makerName","type","pcTypeNumber","pcServiceTag","Check","label","id","checked","assetKind","pcMemo","monitorNumber1","monitorNumber2","monitorNumber3","monitorMemo","mouseNumber","mouseMemo","keyboardNumber","keyboardMemo","Button","disabled","size","ItemTab","key","setKey","Tabs","activeKey","onSelect","k","Tab","eventKey","title","SearchBar","Search","columns","dataField","text","sort","editable","expandRow","renderer","row","ItemList","rowEvents","onClick","rowIndex","pageOptions","keyField","search","searchProps","pagination","paginationFactory","bootstrap4","bordered","baseProps","App","fluid","variant","Item","Link","href","icon","faHome","faDesktop","faUser","faDatabase","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98ff7807.chunk.js","sourcesContent":["import React,{FC, useState,useEffect} from 'react';\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport useAxios from 'axios-hooks';\r\nimport './pc-tab.css';\r\n\r\n\r\nconst PCTab:FC<any> = (props:any) => {\r\n\r\n    const [pcInfo, setPcInfo] = useState<any>(props.data);\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n    const onSaveBtnClick = (e:any) => {\r\n      e.preventDefault();\r\n      console.log(e);\r\n      setLoading(true);\r\n\r\n    };\r\n\r\n    const handleFormChange = (e:React.ChangeEvent<any>) => {\r\n      setPcInfo({...pcInfo, [e.target.name]: e.target.value});\r\n      console.log(pcInfo);\r\n    };\r\n\r\n    const [{data, loading, error}, executePut] = useAxios({\r\n      url:'http://localhost:5000/pcitems',\r\n      method:'PUT'\r\n    });\r\n\r\n    useEffect(() => {\r\n      setLoading(loading);\r\n\r\n    },[isLoading]);\r\n\r\n\r\n    return(\r\n      <div className=\"tab-border\">\r\n        <Form onSubmit={onSaveBtnClick} >\r\n          <Form.Row>\r\n            <Col xs=\"auto\">\r\n              <Form.Group controlId=\"makerName\">\r\n                <Form.Label>メーカー</Form.Label>\r\n                <Form.Control as=\"select\" custom onChange={handleFormChange} >\r\n                  <option selected={pcInfo.makerName === \"DELL\"}>DELL</option>\r\n                  <option selected={pcInfo.makerName === \"Apple\"}>Apple</option>\r\n                  <option selected={pcInfo.makerName === \"HP\"}>HP</option>\r\n                  <option selected={pcInfo.makerName === \"Microsoft\"}>Microsoft</option>\r\n                  <option selected={pcInfo.makerName === \"acer\"}>acer</option>\r\n                </Form.Control>   \r\n              </Form.Group>\r\n            </Col>\r\n              \r\n            <Col xs=\"auto\">\r\n              <Form.Group controlId=\"pcTypeNumber\">\r\n              <Form.Label>型番</Form.Label>\r\n              <Form.Control \r\n                  type=\"text\"\r\n                  name=\"pcTypeNumber\"\r\n                  value={pcInfo.pcTypeNumber}\r\n                  onChange={handleFormChange} \r\n                  \r\n              />   \r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col xs={5}>\r\n              <Form.Group controlId=\"pcServiceTag\">\r\n                <Form.Label>サービスタグ</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name=\"pcServiceTag\"\r\n                  value={pcInfo.pcServiceTag}\r\n                  onChange={handleFormChange} \r\n                />   \r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col xs=\"auto\">\r\n              <Form.Group controlId=\"assetKind\">\r\n                <Form.Label>種別</Form.Label>\r\n                <Form.Check \r\n                  type=\"radio\"\r\n                  label=\"デスクトップ\"\r\n                  name=\"assetKind\"\r\n                  id=\"assetKindDesktop\"\r\n                  checked={pcInfo.assetKind ===\"デスクトップ\" }\r\n                \r\n                />\r\n                <Form.Check \r\n                  type=\"radio\"\r\n                  label=\"ノート\"\r\n                  name=\"assetKind\"\r\n                  id=\"assetKindNote\" \r\n                  checked={pcInfo.assetKind ===\"ノート\" }\r\n                  onChange={handleFormChange}                   \r\n                />                          \r\n              </Form.Group> \r\n            </Col>\r\n                   \r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"pcMemo\">\r\n                <Form.Label>備考</Form.Label>\r\n                <Form.Control \r\n                  type=\"textarea\"\r\n                  name=\"pcMemo\"\r\n                  value={pcInfo.pcMemo}\r\n                  onChange={handleFormChange} \r\n                  />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"monitorNumber1\">\r\n                <Form.Label>モニター1</Form.Label>\r\n                <Form.Control \r\n                    type=\"text\"\r\n                    name=\"monitorNumber1\"\r\n                    value={pcInfo.monitorNumber1}\r\n                />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Group controlId=\"monitorNumber2\">\r\n                <Form.Label>モニター2</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name=\"monitorNumber2\"\r\n                  value={pcInfo.monitorNumber2}\r\n                />   \r\n              </Form.Group>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Group controlId=\"monitorNumber3\">\r\n                <Form.Label>モニター3</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name=\"monitorNumber3\"\r\n                  value={pcInfo.monitorNumber3}\r\n                />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n            <Col xs={7}>\r\n              <Form.Group controlId=\"monitorMemo\">\r\n                <Form.Label>モニター備考</Form.Label>\r\n                <Form.Control \r\n                  type=\"textarea\"\r\n                  name=\"monitorMemo\"\r\n                  value={pcInfo.monitorMemo}\r\n                />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"mouseNumber\">\r\n                <Form.Label>マウス</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name=\"mouseNumber\"\r\n                  value={pcInfo.mouseNumber}\r\n                />   \r\n              </Form.Group>             \r\n            </Col>\r\n\r\n            <Col xs={4}>\r\n              <Form.Group controlId=\"mouseMemo\">\r\n                <Form.Label>マウス備考</Form.Label>\r\n                <Form.Control \r\n                  type=\"textarea\"\r\n                  name=\"mouseMemo\"\r\n                  value={pcInfo.mouseMemo}\r\n                />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n            <Col>\r\n              <Form.Group controlId=\"keyboardNumber\">\r\n                <Form.Label>キーボード</Form.Label>\r\n                <Form.Control \r\n                  type=\"text\"\r\n                  name=\"keyboardNumber\"\r\n                  value={pcInfo.keyboardNumber}\r\n                />   \r\n              </Form.Group>            \r\n            </Col>\r\n\r\n            <Col xs={4}>\r\n              <Form.Group controlId=\"keyboardMemo\">\r\n                <Form.Label>キーボード備考</Form.Label>\r\n                <Form.Control \r\n                  type=\"textarea\"\r\n                  name=\"keyboardMemo\"\r\n                  value={pcInfo.keyboardMemo}\r\n                />   \r\n              </Form.Group> \r\n            </Col>\r\n  \r\n          </Form.Row>\r\n          <Form.Row >\r\n            <Col className=\"row-save-btn\">\r\n              <Button type=\"submitt\" disabled={isLoading} size=\"lg\">{isLoading ? '保存しています...' : '保存'}</Button>\r\n            </Col>\r\n          </Form.Row>                                                                                                                                                    \r\n        </Form>    \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default PCTab;","import React,{FC, useState} from 'react';\r\nimport { Tabs, Tab, Card, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './item-tab.css';\r\nimport  PCTab from './pc-tab';\r\n\r\n\r\nconst ItemTab:FC<any> =(props:any) =>{\r\n    const [key,setKey] = useState('pc');\r\n    \r\n    return(\r\n      <Tabs activeKey={key}\r\n        onSelect={(k:any) => setKey(k)}>\r\n\r\n        <Tab eventKey=\"pc\" title=\"PC\">\r\n          <PCTab data={props.data} />\r\n        </Tab>\r\n        <Tab eventKey=\"account\" title=\"アカウント\">\r\n          Account_Content\r\n        </Tab>          \r\n      </Tabs>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default ItemTab;","import React, {FC, useState} from 'react';\r\nimport useAxios from 'axios-hooks';\r\n\r\nimport './Item-list.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search, TableToolkitProps, ToolkitContextType } from 'react-bootstrap-table2-toolkit';\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\n\r\nimport ItemTab from './item-tab';\r\n\r\nconst { SearchBar } = Search;\r\n\r\ninterface ColumItems {\r\n  pcItemCode:string,\r\n  assetKindCode:string,\r\n  itemNumber:string,\r\n  employeeName:string,\r\n  departmentName:string,\r\n}\r\n\r\ninterface DetailItems {\r\n  makerName:string,\r\n  pcTypeNumber:string,\r\n  pcServiceTag:string,\r\n  assetKind:string,\r\n  pcMemo:string,\r\n  monitorNumber1:string,\r\n  monitorNumber2:string,\r\n  monitorNumber3:string,\r\n  mouseMemo:string,\r\n  mouseNumber:string,\r\n\r\n}\r\n\r\nconst columns = [\r\n  {dataField:\"pcItemCode\"     , text:\"No.\"     ,sort:true, editable:false},\r\n  {dataField:\"assetKindCode\"  , text:\"資産種別\" ,sort:true, editable:false},\r\n  {dataField:\"itemNumber\"     , text:\"備品番号\" ,sort:true, editable:false},\r\n  {dataField:\"employeeName\"   , text:\"従業員名\" ,sort:true, editable:false},\r\n  {dataField:\"departmentName\" , text:\"部署\"     ,sort:true, editable:false}\r\n];\r\n\r\nconst expandRow = {\r\n  renderer:(row:DetailItems) => (\r\n    <div>\r\n      <ItemTab data={row}  />\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\nconst ItemList: FC = () => {\r\n\r\n    const [{data, loading, error}, refetch] = useAxios(\r\n        'http://localhost:5000/pcitems'\r\n        // 'http://192.168.1.80:5003/PCItems'\r\n    );\r\n    \r\n    if (loading) return <p>loading...</p>\r\n    if (error) return <p>Error!</p>\r\n\r\n\r\n    const rowEvents:any = {\r\n        onClick: (e:any, row:any, rowIndex:number) =>  {\r\n            console.log(row);\r\n        }\r\n    };\r\n\r\n    const pageOptions:any = {\r\n        \r\n    };\r\n\r\n    const afterSearch:any = (newResult:any) => {\r\n        console.log(newResult);\r\n    };\r\n\r\n\r\n    return(\r\n      <div className=\"item-list-table\">\r\n        <ToolkitProvider\r\n          keyField=\"pcItemCode\"\r\n          data={data}\r\n          columns={columns}\r\n          search> \r\n          {\r\n            props => (\r\n              <div>\r\n                <h3>検索</h3>\r\n                <SearchBar { ...props.searchProps } />\r\n                <hr />\r\n                <BootstrapTable \r\n                  rowEvents={rowEvents}\r\n                  pagination={ paginationFactory(pageOptions)}\r\n                  bootstrap4={true}\r\n                  bordered={true}\r\n                  expandRow={expandRow}\r\n                  { ...props.baseProps }                            \r\n                />\r\n              </div>    \r\n              )\r\n            }  \r\n            </ToolkitProvider>\r\n         </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ItemList;","import React from 'react';\r\n\r\nimport logo from './logo.svg';\r\n\r\nimport \"bootswatch/dist/darkly/bootstrap.min.css\";\r\nimport './App.css';\r\nimport * as ReactBootstrap from 'react-bootstrap';\r\n\r\nimport ItemList from './components/Item-list';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faHome,faDesktop,faUser,faDatabase} from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction App() {\r\n \r\n  return (\r\n\r\n    <body className=\"body\">\r\n      <ReactBootstrap.Container fluid>\r\n        <ReactBootstrap.Row>  \r\n \r\n          <div className=\"col_nav\">\r\n            <ReactBootstrap.Nav variant=\"pills\" className=\"flex-column\" id=\"menu-nav\">\r\n              <ReactBootstrap.NavbarBrand id=\"app-title\">IT資産管理台帳</ReactBootstrap.NavbarBrand>\r\n                <ReactBootstrap.Nav.Item>\r\n                  <ReactBootstrap.Nav.Link href=\"/home\"><FontAwesomeIcon icon={faHome} />Home</ReactBootstrap.Nav.Link>\r\n                </ReactBootstrap.Nav.Item>\r\n\r\n                <ReactBootstrap.Nav.Item>\r\n                  <ReactBootstrap.Nav.Link href=\"/items\"><FontAwesomeIcon icon={faDesktop}/>機器一覧</ReactBootstrap.Nav.Link>\r\n                </ReactBootstrap.Nav.Item>\r\n\r\n                <ReactBootstrap.Nav.Item>\r\n                  <ReactBootstrap.Nav.Link href=\"/employee\"><FontAwesomeIcon icon={faUser} />従業員一覧</ReactBootstrap.Nav.Link>\r\n                </ReactBootstrap.Nav.Item>\r\n\r\n                <ReactBootstrap.Nav.Item>\r\n                  <ReactBootstrap.Nav.Link href=\"/master\"><FontAwesomeIcon icon={faDatabase}/>マスタ管理</ReactBootstrap.Nav.Link>\r\n                </ReactBootstrap.Nav.Item>       \r\n            </ReactBootstrap.Nav>\r\n\r\n          </div>\r\n          <ReactBootstrap.Col className=\"col_main\">\r\n            <div>\r\n              <ItemList />\r\n            </div>\r\n \r\n          </ReactBootstrap.Col>\r\n\r\n        </ReactBootstrap.Row>\r\n      </ReactBootstrap.Container>\r\n    </body>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}